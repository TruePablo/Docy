.. Bot documentation master file, created by
   sphinx-quickstart on Tue Jun 14 12:56:55 2022.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

TheMusic_bot
===============================

.. toctree::
   :maxdepth: 2
   :caption: Contents:


Indices and tables
==================

* :ref:`genindex`
* :ref:`search`



–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏:
===================

‚óã pyTelegramBotApi
‚óã Yandex_Music_Api
‚óã OS



–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:
================================


‚Ä¢ –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å API –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∏
‚Ä¢ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
‚Ä¢ –ü–æ–∏—Å–∫ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
‚Ä¢ –ü–æ–∏—Å–∫ –∞–ª—å–±–æ–º–æ–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏
‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∞—Ä—Ç–∞ –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∏
‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Å–µ–Ω –∏–∑ —á–∞—Ä—Ç–∞ –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∏



–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Yandex_Music_Api:
====================================

1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–æ–≤, —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞, —Å–æ–∑–¥–∞–Ω–∏–µ –ë–î:
=======================================================
client = Client("–¢–æ–∫–µ–Ω –∏–∑ —è–Ω–¥–µ–∫—Å.–º—É–∑—ã–∫–∏").init()
bot = telebot.TeleBot('–¢–æ–∫–µ–Ω —Ç–µ–ª–µ–≥—Ä–∞–º–∞')
SRC = 'covers/'
client.init()
type_to_name = {
    'track': '—Ç—Ä–µ–∫',
    'artist': '–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å',
    'album': '–∞–ª—å–±–æ–º',
    'playlist': '–ø–ª–µ–π–ª–∏—Å—Ç',
    'video': '–≤–∏–¥–µ–æ',
    'user': '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    'podcast': '–ø–æ–¥–∫–∞—Å—Ç',
    'podcast_episode': '—ç–ø–∏–∑–æ–¥ –ø–æ–¥–∫–∞—Å—Ç–∞',
}


2. –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä:
======================
keyboardstart = telebot.types.ReplyKeyboardMarkup(True, True)
keyboardstart.row('–ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏', '–ß–∞—Ä—Ç', '–ü–æ–º–æ—â—å')
keyboardchart = telebot.types.ReplyKeyboardMarkup(True, True)
keyboardchart.row('–í—ã–±—Ä–∞—Ç—å –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏')
keyboardalbum = telebot.types.ReplyKeyboardMarkup(True, True)
keyboardchart.row('–ù–∞–π—Ç–∏ –≤–µ—Å—å –∞–ª—å–±–æ–º', '–ù–∞–∑–∞–¥')
keyboardtex = telebot.types.ReplyKeyboardMarkup(True, True)
keyboardtex.row('–ù–∞–∑–∞–¥')

3. –•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start:
==========================

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–≠—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞—É–¥–∏–æ, –∫–ª–∏–ø–æ–≤ –∏ —Ç.–¥.', reply_markup=keyboardstart)

4. –•–µ–Ω–¥–ª–µ—Ä —Ç–µ–∫—Å—Ç–∞, –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
=============================================================
@bot.message_handler(content_types=['text'])
def send_message(message):
    if message.text == '–ü–æ–º–æ—â—å':
        bot.send_message(message.chat.id, '–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º - https://t.me/noofme', reply_markup=keyboardstart)
    if message.text == '–¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏':
        bot.send_message(message.chat.id, '–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', reply_markup=keyboardstart)
    if message.text == '–ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏:')
        bot.register_next_step_handler(message, send_search_request_and_print_result)
    if message.text == '–ß–∞—Ä—Ç':
        CHART_ID = 'world'
        TOKEN = os.environ.get('AQAAAAAc65qhAAG8XjyfoAhskUCSi6PAgpWv-2I')

        client = Client(TOKEN).init()
        chart = client.chart(CHART_ID).chart

        text = [f'üèÜ {chart.title}', chart.description, '', '–¢—Ä–µ–∫–∏:']
        f = 0
        for track_short in chart.tracks:
            track, chart = track_short.track, track_short.chart
            artists = ''
            if track.artists:
                artists = ' - ' + ', '.join(artist.name for artist in track.artists)
            filename = f
            if os.path.exists(f"{filename}.mp3"):
                pass
            #audio = open(f'C:/Users/Paul/PycharmProjects/resposbot/{filename}.mp3', 'rb')
            #bot.send_audio(message.chat.id, audio)
            #audio.close()
            track_text = f'{track.title}{artists}'
            #bot.send_message(message.chat.id, client.tracks_download_info(track_id=track.id, get_direct_links=True))
            if chart.progress == 'down':
                track_text = 'üîª ' + track_text
            elif chart.progress == 'up':
                track_text = 'üî∫ ' + track_text
            elif chart.progress == 'new':
                track_text = 'üÜï ' + track_text
            elif chart.position == 1:
                track_text = 'üëë ' + track_text
            track_text = f'{chart.position} {track_text}'
            text.append(track_text)
            f+=1

        bot.send_message(message.chat.id, f'\n'.join(text), reply_markup=keyboardchart)
    if message.text == '–ù–∞–π—Ç–∏ –≤–µ—Å—å –∞–ª—å–±–æ–º':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç—Ä–µ–∫–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –∞–ª—å–±–æ–º:')
        bot.register_next_step_handler(message, find_album_by_id)
    if message.text == '–ù–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é:', reply_markup=keyboardstart)
    if message.text == '–í—ã–±—Ä–∞—Ç—å –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç—Ä–µ–∫–∞:',reply_markup=keyboardalbum)
        bot.register_next_step_handler(message, senda)

def find_album_by_id(message):
    try:
        num = int(message.text)
        CHART_ID = 'world'
        TOKEN = os.environ.get('AQAAAAAc65qhAAG8XjyfoAhskUCSi6PAgpWv-2I')
        client = Client(TOKEN).init()
        chart = client.chart(CHART_ID).chart
        for track_short in chart.tracks:
            track, chart = track_short.track, track_short.chart
            if chart.position != num:
                chart.position += 1
            else:
                ALBUM_ID = track.albums[0].id

                album = client.albums_with_tracks(ALBUM_ID)
                tracks = []
                for i, volume in enumerate(album.volumes):
                    if len(album.volumes) > 1:
                        tracks.append(f'üíø –î–∏—Å–∫ {i + 1}')
                    tracks += volume

                text = '–ê–õ–¨–ë–û–ú\n\n'
                text += f'{album.title}\n'
                text += f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {', '.join([artist.name for artist in album.artists])}\n"
                text += f'{album.year} ¬∑ {album.genre}\n'

                cover = album.cover_uri
                if cover:
                    text += f'–û–±–ª–æ–∂–∫–∞: {cover.replace("%%", "400x400")}\n\n'

                text += '–°–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–æ–≤:'

                bot.send_message(message.chat.id, text)

                for track in tracks:
                    if isinstance(track, str):
                        bot.send_message(message.chat.id, track)
                    else:
                        artists = ''
                        if track.artists:
                            artists = ' - ' + ', '.join(artist.name for artist in track.artists)
                        bot.send_message(message.chat.id, track.title + artists)

    except:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')




def send_search_request_and_print_result(message):
    query = message.text
    search_result = client.search(query)



    text = [f'–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É "{query}":', '']
    best_result_text = ''
    try:
        search_result.best.result.download(filename=f'{search_result.best.result.title}.mp3', bitrate_in_kbps=192)
    except AttributeError:
        bot.send_message(message.chat.id, '–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –£—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.')
    if search_result.best:
        type_ = search_result.best.type
        best = search_result.best.result

        text.append(f'‚ùóÔ∏è–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {type_to_name.get(type_)}')

        if type_ in ['track', 'podcast_episode']:

            artists = ''
            if best.artists:
                artists = ' - ' + ', '.join(artist.name for artist in best.artists)
            best_result_text = best.title + artists
        elif type_ == 'artist':
            best_result_text = best.name
        elif type_ in ['album', 'podcast']:
            best_result_text = best.title
        elif type_ == 'playlist':
            best_result_text = best.title
        elif type_ == 'video':
            best_result_text = f'{best.title} {best.text}'

        text.append(f'–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {best_result_text}\n')
    if search_result.artists:
        text.append(f'–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π: {search_result.artists.total}')
    if search_result.albums:
        text.append(f'–ê–ª—å–±–æ–º–æ–≤: {search_result.albums.total}')
    if search_result.tracks:
        text.append(f'–¢—Ä–µ–∫–æ–≤: {search_result.tracks.total}')
    if search_result.playlists:
        text.append(f'–ü–ª–µ–π–ª–∏—Å—Ç–æ–≤: {search_result.playlists.total}')
    if search_result.videos:
        text.append(f'–í–∏–¥–µ–æ: {search_result.videos.total}')
    try:
        img = search_result.best.result.downloadCover(filename='cover.png')
        cover = open('cover.png', 'rb')
        bot.send_photo(message.chat.id, cover)
        text.append('')
        bot.send_message(message.chat.id, '\n'.join(text))
        audio = open(f'{search_result.best.result.title}.mp3', 'rb')
        bot.send_audio(message.chat.id, audio, title=search_result.best.result.title, reply_markup=keyboardstart)
        audio.close()
    except AttributeError:
        bot.send_message(message.chat.id, '–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –£—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.')

    #except:
        #bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å', reply_markup=keyboardstart)
